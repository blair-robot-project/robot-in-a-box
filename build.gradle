import jaci.openrio.gradle.GradleRIOPlugin
import jaci.openrio.gradle.frc.FRCJavaArtifact
import jaci.openrio.gradle.frc.RoboRIO

plugins {
    id 'org.hidetake.ssh' version "2.9.0"
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'jaci.openrio.gradle.GradleRIO' version "2018.01.06"
}

group 'org.usfirst.frc.team449.robot-in-a-box'
version '1.0'

def TEAM = 449
def ROBOT_CLASS = "org.usfirst.frc.team449.robot.Robot"

repositories {
    mavenCentral()
    maven {
        name = "GradleRio"
        url = "http://dev.imjac.in/maven"
    }

    maven { url "https://plugins.gradle.org/m2/" }
    maven { url 'https://jitpack.io' }
}
dependencies {
    compile 'com.github.blair-robot-project:449-central-repo:869e89539d'
}

/* ssh stuff */
remotes {
    rio {
        host = 'roboRIO-449-frc.local'
        user = 'lvuser'
        knownHosts = allowAnyHosts
    }
}

task('copyResources') {
    doLast {
        ssh.run {
            session(remotes.rio) {
                execute 'mkdir ~/449_resources', ignoreError: true
                execute 'mkdir ~/logs', ignoreError: true
                put from: fileTree('src/main/resources'), into: './449_resources/'
                execute ". /etc/profile.d/natinst-path.sh; /usr/local/frc/bin/frcKillRobot.sh -t -r", ignoreError: true
            }
        }
    }
}

deploy {
    targets {
        target("roborio", RoboRIO) {
            team = TEAM
        }
    }
    artifacts {
        artifact('frcJava', FRCJavaArtifact) {
            targets << "roborio"
        }
    }
}

jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest GradleRIOPlugin.javaManifest(ROBOT_CLASS)
}

task genJavadoc(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task deleteDocs(type: Delete){
    delete 'docs'
    followSymlinks = false
}

task copyDocs(type: Copy, dependsOn: [genJavadoc, deleteDocs]){
    from 'build/docs/javadoc'
    into 'docs'
}

artifacts {
    archives genJavadoc
}

compileJava {
    options.compilerArgs << '-parameters'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.4'
}